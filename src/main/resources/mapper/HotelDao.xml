<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.klein.dao.HotelDao">

    <resultMap id="BaseResultMap" type="com.example.klein.entity.Hotel">
        <!--@Table hotel-->
        <result property="hotelid" column="hotelId" jdbcType="INTEGER"/>
        <result property="hotelname" column="hotelName" jdbcType="VARCHAR"/>
        <result property="startlevel" column="startLevel" jdbcType="INTEGER"/>
        <result property="phonenumber" column="phoneNumber" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          hotelId, hotelName, startLevel, phoneNumber, address
        from hotel
        where hotelId = #{hotelid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          hotelId, hotelName, startLevel, phoneNumber, address
        from hotel
        <where>
            <if test="hotelid != null">
                and hotelId = #{hotelid}
            </if>
            <if test="hotelname != null and hotelname != ''">
                and hotelName = #{hotelname}
            </if>
            <if test="startlevel != null">
                and startLevel = #{startlevel}
            </if>
            <if test="phonenumber != null and phonenumber != ''">
                and phoneNumber = #{phonenumber}
            </if>
            <if test="address != null and address != ''">
                and address = #{address}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          hotelId, hotelName, startLevel, phoneNumber, address
        from klein.hotel
    </select>
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from hotel
        <where>
            <if test="hotelid != null">
                and hotelId = #{hotelid}
            </if>
            <if test="hotelname != null and hotelname != ''">
                and hotelName = #{hotelname}
            </if>
            <if test="startlevel != null">
                and startLevel = #{startlevel}
            </if>
            <if test="phonenumber != null and phonenumber != ''">
                and phoneNumber = #{phonenumber}
            </if>
            <if test="address != null and address != ''">
                and address = #{address}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="hotelid" useGeneratedKeys="true">
        insert into hotel(hotelName, startLevel, phoneNumber, address)
        values (#{hotelname}, #{startlevel}, #{phonenumber}, #{address})
    </insert>

    <insert id="insertBatch" keyProperty="hotelid" useGeneratedKeys="true">
        insert into hotel(hotelName, startLevel, phoneNumber, address)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.hotelname}, #{entity.startlevel}, #{entity.phonenumber}, #{entity.address})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="hotelid" useGeneratedKeys="true">
        insert into hotel(hotelName, startLevel, phoneNumber, address)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.hotelname}, #{entity.startlevel}, #{entity.phonenumber}, #{entity.address})
        </foreach>
        on duplicate key update
        hotelName = values(hotelName),
        startLevel = values(startLevel),
        phoneNumber = values(phoneNumber),
        address = values(address)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update hotel
        <set>
            <if test="hotelname != null and hotelname != ''">
                hotelName = #{hotelname},
            </if>
            <if test="startlevel != null">
                startLevel = #{startlevel},
            </if>
            <if test="phonenumber != null and phonenumber != ''">
                phoneNumber = #{phonenumber},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
        </set>
        where hotelId = #{hotelid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from hotel where hotelId = #{hotelid}
    </delete>

</mapper>

