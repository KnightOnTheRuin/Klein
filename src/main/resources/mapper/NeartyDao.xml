<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.klein.dao.NeartyDao">

    <resultMap id="BaseResultMap" type="com.example.klein.entity.Nearty">
        <!--@Table nearty-->
        <result property="neartyId" column="neartyId" jdbcType="INTEGER"/>
        <result property="scenicAreaId" column="scenicAreaId" jdbcType="INTEGER"/>
        <result property="hotelId" column="hotelId" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          neartyId, scenicAreaId, hotelId
        from nearty
        where neartyId = #{neartyId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          neartyId, scenicAreaId, hotelId
        from nearty
        <where>
            <if test="neartyId != null">
                and neartyId = #{neartyId}
            </if>
            <if test="scenicAreaId != null">
                and scenicAreaId = #{scenicAreaId}
            </if>
            <if test="hotelId != null">
                and hotelId = #{hotelId}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          neartyId, scenicAreaId, hotelId
        from klein.nearty
    </select>
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from nearty
        <where>
            <if test="neartyId != null">
                and neartyId = #{neartyId}
            </if>
            <if test="scenicAreaId != null">
                and scenicAreaId = #{scenicAreaId}
            </if>
            <if test="hotelId != null">
                and hotelId = #{hotelId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="neartyId" useGeneratedKeys="true">
        insert into nearty(scenicAreaId, hotelId)
        values (#{scenicAreaId}, #{hotelId})
    </insert>

    <insert id="insertBatch" keyProperty="neartyId" useGeneratedKeys="true">
        insert into nearty(scenicAreaId, hotelId)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.scenicAreaId}, #{entity.hotelId})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="neartyId" useGeneratedKeys="true">
        insert into nearty(scenicAreaId, hotelId)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.scenicAreaId}, #{entity.hotelId})
        </foreach>
        on duplicate key update
        scenicAreaId = values(scenicAreaId),
        hotelId = values(hotelId)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update nearty
        <set>
            <if test="scenicAreaId != null">
                scenicAreaId = #{scenicAreaId},
            </if>
            <if test="hotelId != null">
                hotelId = #{hotelId},
            </if>
        </set>
        where neartyId = #{neartyId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from nearty where neartyId = #{neartyId}
    </delete>

</mapper>

