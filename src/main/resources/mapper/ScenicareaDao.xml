<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.klein.dao.ScenicareaDao">

    <resultMap id="BaseResultMap" type="com.example.klein.entity.Scenicarea">
        <!--@Table scenicarea-->
        <result property="scenicAreaId" column="scenicAreaId" jdbcType="INTEGER"/>
        <result property="scenicAreaName" column="scenicAreaName" jdbcType="VARCHAR"/>
        <result property="phoneNumber" column="phoneNumber" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          scenicAreaId, scenicAreaName, phoneNumber
        from scenicarea
        where scenicAreaId = #{scenicAreaId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          scenicAreaId, scenicAreaName, phoneNumber
        from scenicarea
        <where>
            <if test="scenicAreaId != null">
                and scenicAreaId = #{scenicAreaId}
            </if>
            <if test="scenicAreaName != null and scenicAreaName != ''">
                and scenicAreaName = #{scenicAreaName}
            </if>
            <if test="phoneNumber != null and phoneNumber != ''">
                and phoneNumber = #{phoneNumber}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          scenicAreaId, scenicAreaName, phoneNumber
        from klein.scenicarea
    </select>
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from scenicarea
        <where>
            <if test="scenicAreaId != null">
                and scenicAreaId = #{scenicAreaId}
            </if>
            <if test="scenicAreaName != null and scenicAreaName != ''">
                and scenicAreaName = #{scenicAreaName}
            </if>
            <if test="phoneNumber != null and phoneNumber != ''">
                and phoneNumber = #{phoneNumber}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="scenicAreaId" useGeneratedKeys="true">
        insert into scenicarea(scenicAreaName, phoneNumber)
        values (#{scenicAreaName}, #{phoneNumber})
    </insert>

    <insert id="insertBatch" keyProperty="scenicAreaId" useGeneratedKeys="true">
        insert into scenicarea(scenicAreaName, phoneNumber)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.scenicAreaName}, #{entity.phoneNumber})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="scenicAreaId" useGeneratedKeys="true">
        insert into scenicarea(scenicAreaName, phoneNumber)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.scenicAreaName}, #{entity.phoneNumber})
        </foreach>
        on duplicate key update
        scenicAreaName = values(scenicAreaName),
        phoneNumber = values(phoneNumber)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update scenicarea
        <set>
            <if test="scenicAreaName != null and scenicAreaName != ''">
                scenicAreaName = #{scenicAreaName},
            </if>
            <if test="phoneNumber != null and phoneNumber != ''">
                phoneNumber = #{phoneNumber},
            </if>
        </set>
        where scenicAreaId = #{scenicAreaId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from scenicarea where scenicAreaId = #{scenicAreaId}
    </delete>

    <!--模糊查询-->
    <select id="dimQueryByName" resultMap="BaseResultMap">
        select
            scenicAreaId, scenicAreaName, phoneNumber
        from klein.scenicarea
        where scenicAreaName like #{dimName}
    </select>
</mapper>

